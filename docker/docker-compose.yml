version: '3.2'

services:
    oms-loginservice:
        build:
            context: ./$PATH_OMS_LOGINSERVICE/loginservice/
            dockerfile: ./Dockerfile.dev
        volumes:
            - ./$PATH_OMS_LOGINSERVICE/../:/usr/src/myapp
        depends_on:
            - oms-loginservice-postgres
        expose:
            - "4000"
        ports:
            - "4000:8084"
        labels:
            - "traefik.frontend.rule=HostRegexp:{domain:[a-z0-9.]+};PathPrefix:/services/oms-loginservice/api;PathPrefixStrip:/services/oms-loginservice"
            - "traefik.frontend.priority=101"
            - "traefik.port=4000"
            - "traefik.backend=loginservice"
            - "traefik.enable=true"
            #- "registry.modules=/static/getModules.json"
            #- "registry.status=/status"
        environment:
            JWT_ISSUER: Alastair
            JWT_SECRET_KEY_FILE: /run/secrets/jwt_key
            SENDGRID_KEY_FILE: /run/secrets/sendgrid_key
            DB_HOSTNAME: oms-loginservice-postgres
        secrets:
            - jwt_key
            - sendgrid_key

    oms-loginservice-postgres:
        image: postgres:latest
        volumes:
            - oms-loginservice-postgres:/var/lib/postgresql/data
        expose:
            - "5432"
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres

    oms-loginservice-nginx:
        image: nginx:alpine
        volumes:
            - ./$PATH_OMS_LOGINSERVICE/../frontend/:/usr/share/nginx/html:ro
        labels:
            - "traefik.frontend.rule=HostRegexp:{domain:[a-z0-9.]+};PathPrefix:/services/oms-loginservice;PathPrefixStrip:/services/oms-loginservice"
            - "traefik.frontend.priority=100"
            - "traefik.port=80"
            - "traefik.backend=oms-loginservice-frontend"
            - "traefik.enable=true"
            - "registry.status=status.json"
            - "registry.modules=getModules.json"

volumes:
    oms-loginservice-postgres:
        driver: "local"

